package com.ecommerce.OnlineShopping.domain;

import java.util.ArrayList;
import java.util.List;

public class BankDetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public BankDetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBankdetailsidIsNull() {
            addCriterion("BankDetailsID is null");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidIsNotNull() {
            addCriterion("BankDetailsID is not null");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidEqualTo(Long value) {
            addCriterion("BankDetailsID =", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidNotEqualTo(Long value) {
            addCriterion("BankDetailsID <>", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidGreaterThan(Long value) {
            addCriterion("BankDetailsID >", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidGreaterThanOrEqualTo(Long value) {
            addCriterion("BankDetailsID >=", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidLessThan(Long value) {
            addCriterion("BankDetailsID <", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidLessThanOrEqualTo(Long value) {
            addCriterion("BankDetailsID <=", value, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidIn(List<Long> values) {
            addCriterion("BankDetailsID in", values, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidNotIn(List<Long> values) {
            addCriterion("BankDetailsID not in", values, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidBetween(Long value1, Long value2) {
            addCriterion("BankDetailsID between", value1, value2, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andBankdetailsidNotBetween(Long value1, Long value2) {
            addCriterion("BankDetailsID not between", value1, value2, "bankdetailsid");
            return (Criteria) this;
        }

        public Criteria andCardnoIsNull() {
            addCriterion("CardNo is null");
            return (Criteria) this;
        }

        public Criteria andCardnoIsNotNull() {
            addCriterion("CardNo is not null");
            return (Criteria) this;
        }

        public Criteria andCardnoEqualTo(String value) {
            addCriterion("CardNo =", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoNotEqualTo(String value) {
            addCriterion("CardNo <>", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoGreaterThan(String value) {
            addCriterion("CardNo >", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoGreaterThanOrEqualTo(String value) {
            addCriterion("CardNo >=", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoLessThan(String value) {
            addCriterion("CardNo <", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoLessThanOrEqualTo(String value) {
            addCriterion("CardNo <=", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoLike(String value) {
            addCriterion("CardNo like", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoNotLike(String value) {
            addCriterion("CardNo not like", value, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoIn(List<String> values) {
            addCriterion("CardNo in", values, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoNotIn(List<String> values) {
            addCriterion("CardNo not in", values, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoBetween(String value1, String value2) {
            addCriterion("CardNo between", value1, value2, "cardno");
            return (Criteria) this;
        }

        public Criteria andCardnoNotBetween(String value1, String value2) {
            addCriterion("CardNo not between", value1, value2, "cardno");
            return (Criteria) this;
        }

        public Criteria andPincodeIsNull() {
            addCriterion("PinCode is null");
            return (Criteria) this;
        }

        public Criteria andPincodeIsNotNull() {
            addCriterion("PinCode is not null");
            return (Criteria) this;
        }

        public Criteria andPincodeEqualTo(String value) {
            addCriterion("PinCode =", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeNotEqualTo(String value) {
            addCriterion("PinCode <>", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeGreaterThan(String value) {
            addCriterion("PinCode >", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeGreaterThanOrEqualTo(String value) {
            addCriterion("PinCode >=", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeLessThan(String value) {
            addCriterion("PinCode <", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeLessThanOrEqualTo(String value) {
            addCriterion("PinCode <=", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeLike(String value) {
            addCriterion("PinCode like", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeNotLike(String value) {
            addCriterion("PinCode not like", value, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeIn(List<String> values) {
            addCriterion("PinCode in", values, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeNotIn(List<String> values) {
            addCriterion("PinCode not in", values, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeBetween(String value1, String value2) {
            addCriterion("PinCode between", value1, value2, "pincode");
            return (Criteria) this;
        }

        public Criteria andPincodeNotBetween(String value1, String value2) {
            addCriterion("PinCode not between", value1, value2, "pincode");
            return (Criteria) this;
        }

        public Criteria andAcclinkidIsNull() {
            addCriterion("accLinkID is null");
            return (Criteria) this;
        }

        public Criteria andAcclinkidIsNotNull() {
            addCriterion("accLinkID is not null");
            return (Criteria) this;
        }

        public Criteria andAcclinkidEqualTo(Long value) {
            addCriterion("accLinkID =", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidNotEqualTo(Long value) {
            addCriterion("accLinkID <>", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidGreaterThan(Long value) {
            addCriterion("accLinkID >", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidGreaterThanOrEqualTo(Long value) {
            addCriterion("accLinkID >=", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidLessThan(Long value) {
            addCriterion("accLinkID <", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidLessThanOrEqualTo(Long value) {
            addCriterion("accLinkID <=", value, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidIn(List<Long> values) {
            addCriterion("accLinkID in", values, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidNotIn(List<Long> values) {
            addCriterion("accLinkID not in", values, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidBetween(Long value1, Long value2) {
            addCriterion("accLinkID between", value1, value2, "acclinkid");
            return (Criteria) this;
        }

        public Criteria andAcclinkidNotBetween(Long value1, Long value2) {
            addCriterion("accLinkID not between", value1, value2, "acclinkid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bankdetails
     *
     * @mbg.generated do_not_delete_during_merge Mon May 25 10:16:09 NPT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bankdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}