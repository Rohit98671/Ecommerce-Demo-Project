package com.ecommerce.OnlineShopping.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ShippingDetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public ShippingDetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andShpidIsNull() {
            addCriterion("shpID is null");
            return (Criteria) this;
        }

        public Criteria andShpidIsNotNull() {
            addCriterion("shpID is not null");
            return (Criteria) this;
        }

        public Criteria andShpidEqualTo(Long value) {
            addCriterion("shpID =", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidNotEqualTo(Long value) {
            addCriterion("shpID <>", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidGreaterThan(Long value) {
            addCriterion("shpID >", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidGreaterThanOrEqualTo(Long value) {
            addCriterion("shpID >=", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidLessThan(Long value) {
            addCriterion("shpID <", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidLessThanOrEqualTo(Long value) {
            addCriterion("shpID <=", value, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidIn(List<Long> values) {
            addCriterion("shpID in", values, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidNotIn(List<Long> values) {
            addCriterion("shpID not in", values, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidBetween(Long value1, Long value2) {
            addCriterion("shpID between", value1, value2, "shpid");
            return (Criteria) this;
        }

        public Criteria andShpidNotBetween(Long value1, Long value2) {
            addCriterion("shpID not between", value1, value2, "shpid");
            return (Criteria) this;
        }

        public Criteria andAddidIsNull() {
            addCriterion("addID is null");
            return (Criteria) this;
        }

        public Criteria andAddidIsNotNull() {
            addCriterion("addID is not null");
            return (Criteria) this;
        }

        public Criteria andAddidEqualTo(Long value) {
            addCriterion("addID =", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidNotEqualTo(Long value) {
            addCriterion("addID <>", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidGreaterThan(Long value) {
            addCriterion("addID >", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidGreaterThanOrEqualTo(Long value) {
            addCriterion("addID >=", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidLessThan(Long value) {
            addCriterion("addID <", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidLessThanOrEqualTo(Long value) {
            addCriterion("addID <=", value, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidIn(List<Long> values) {
            addCriterion("addID in", values, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidNotIn(List<Long> values) {
            addCriterion("addID not in", values, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidBetween(Long value1, Long value2) {
            addCriterion("addID between", value1, value2, "addid");
            return (Criteria) this;
        }

        public Criteria andAddidNotBetween(Long value1, Long value2) {
            addCriterion("addID not between", value1, value2, "addid");
            return (Criteria) this;
        }

        public Criteria andSnameIsNull() {
            addCriterion("sName is null");
            return (Criteria) this;
        }

        public Criteria andSnameIsNotNull() {
            addCriterion("sName is not null");
            return (Criteria) this;
        }

        public Criteria andSnameEqualTo(String value) {
            addCriterion("sName =", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameNotEqualTo(String value) {
            addCriterion("sName <>", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameGreaterThan(String value) {
            addCriterion("sName >", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameGreaterThanOrEqualTo(String value) {
            addCriterion("sName >=", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameLessThan(String value) {
            addCriterion("sName <", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameLessThanOrEqualTo(String value) {
            addCriterion("sName <=", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameLike(String value) {
            addCriterion("sName like", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameNotLike(String value) {
            addCriterion("sName not like", value, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameIn(List<String> values) {
            addCriterion("sName in", values, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameNotIn(List<String> values) {
            addCriterion("sName not in", values, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameBetween(String value1, String value2) {
            addCriterion("sName between", value1, value2, "sname");
            return (Criteria) this;
        }

        public Criteria andSnameNotBetween(String value1, String value2) {
            addCriterion("sName not between", value1, value2, "sname");
            return (Criteria) this;
        }

        public Criteria andShpaddressIsNull() {
            addCriterion("shpAddress is null");
            return (Criteria) this;
        }

        public Criteria andShpaddressIsNotNull() {
            addCriterion("shpAddress is not null");
            return (Criteria) this;
        }

        public Criteria andShpaddressEqualTo(String value) {
            addCriterion("shpAddress =", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressNotEqualTo(String value) {
            addCriterion("shpAddress <>", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressGreaterThan(String value) {
            addCriterion("shpAddress >", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressGreaterThanOrEqualTo(String value) {
            addCriterion("shpAddress >=", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressLessThan(String value) {
            addCriterion("shpAddress <", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressLessThanOrEqualTo(String value) {
            addCriterion("shpAddress <=", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressLike(String value) {
            addCriterion("shpAddress like", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressNotLike(String value) {
            addCriterion("shpAddress not like", value, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressIn(List<String> values) {
            addCriterion("shpAddress in", values, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressNotIn(List<String> values) {
            addCriterion("shpAddress not in", values, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressBetween(String value1, String value2) {
            addCriterion("shpAddress between", value1, value2, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpaddressNotBetween(String value1, String value2) {
            addCriterion("shpAddress not between", value1, value2, "shpaddress");
            return (Criteria) this;
        }

        public Criteria andShpdateIsNull() {
            addCriterion("shpDate is null");
            return (Criteria) this;
        }

        public Criteria andShpdateIsNotNull() {
            addCriterion("shpDate is not null");
            return (Criteria) this;
        }

        public Criteria andShpdateEqualTo(Date value) {
            addCriterion("shpDate =", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateNotEqualTo(Date value) {
            addCriterion("shpDate <>", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateGreaterThan(Date value) {
            addCriterion("shpDate >", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("shpDate >=", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateLessThan(Date value) {
            addCriterion("shpDate <", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateLessThanOrEqualTo(Date value) {
            addCriterion("shpDate <=", value, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateIn(List<Date> values) {
            addCriterion("shpDate in", values, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateNotIn(List<Date> values) {
            addCriterion("shpDate not in", values, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateBetween(Date value1, Date value2) {
            addCriterion("shpDate between", value1, value2, "shpdate");
            return (Criteria) this;
        }

        public Criteria andShpdateNotBetween(Date value1, Date value2) {
            addCriterion("shpDate not between", value1, value2, "shpdate");
            return (Criteria) this;
        }

        public Criteria andPhnumIsNull() {
            addCriterion("phNum is null");
            return (Criteria) this;
        }

        public Criteria andPhnumIsNotNull() {
            addCriterion("phNum is not null");
            return (Criteria) this;
        }

        public Criteria andPhnumEqualTo(String value) {
            addCriterion("phNum =", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumNotEqualTo(String value) {
            addCriterion("phNum <>", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumGreaterThan(String value) {
            addCriterion("phNum >", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumGreaterThanOrEqualTo(String value) {
            addCriterion("phNum >=", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumLessThan(String value) {
            addCriterion("phNum <", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumLessThanOrEqualTo(String value) {
            addCriterion("phNum <=", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumLike(String value) {
            addCriterion("phNum like", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumNotLike(String value) {
            addCriterion("phNum not like", value, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumIn(List<String> values) {
            addCriterion("phNum in", values, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumNotIn(List<String> values) {
            addCriterion("phNum not in", values, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumBetween(String value1, String value2) {
            addCriterion("phNum between", value1, value2, "phnum");
            return (Criteria) this;
        }

        public Criteria andPhnumNotBetween(String value1, String value2) {
            addCriterion("phNum not between", value1, value2, "phnum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shippingdetails
     *
     * @mbg.generated do_not_delete_during_merge Mon May 25 10:16:09 NPT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shippingdetails
     *
     * @mbg.generated Mon May 25 10:16:09 NPT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}