package com.ecommerce.OnlineShopping.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ShoppingCartExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public ShoppingCartExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCartidIsNull() {
            addCriterion("cartID is null");
            return (Criteria) this;
        }

        public Criteria andCartidIsNotNull() {
            addCriterion("cartID is not null");
            return (Criteria) this;
        }

        public Criteria andCartidEqualTo(Long value) {
            addCriterion("cartID =", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidNotEqualTo(Long value) {
            addCriterion("cartID <>", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidGreaterThan(Long value) {
            addCriterion("cartID >", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidGreaterThanOrEqualTo(Long value) {
            addCriterion("cartID >=", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidLessThan(Long value) {
            addCriterion("cartID <", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidLessThanOrEqualTo(Long value) {
            addCriterion("cartID <=", value, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidIn(List<Long> values) {
            addCriterion("cartID in", values, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidNotIn(List<Long> values) {
            addCriterion("cartID not in", values, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidBetween(Long value1, Long value2) {
            addCriterion("cartID between", value1, value2, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartidNotBetween(Long value1, Long value2) {
            addCriterion("cartID not between", value1, value2, "cartid");
            return (Criteria) this;
        }

        public Criteria andCartdateIsNull() {
            addCriterion("cartDate is null");
            return (Criteria) this;
        }

        public Criteria andCartdateIsNotNull() {
            addCriterion("cartDate is not null");
            return (Criteria) this;
        }

        public Criteria andCartdateEqualTo(Date value) {
            addCriterion("cartDate =", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateNotEqualTo(Date value) {
            addCriterion("cartDate <>", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateGreaterThan(Date value) {
            addCriterion("cartDate >", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateGreaterThanOrEqualTo(Date value) {
            addCriterion("cartDate >=", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateLessThan(Date value) {
            addCriterion("cartDate <", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateLessThanOrEqualTo(Date value) {
            addCriterion("cartDate <=", value, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateIn(List<Date> values) {
            addCriterion("cartDate in", values, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateNotIn(List<Date> values) {
            addCriterion("cartDate not in", values, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateBetween(Date value1, Date value2) {
            addCriterion("cartDate between", value1, value2, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartdateNotBetween(Date value1, Date value2) {
            addCriterion("cartDate not between", value1, value2, "cartdate");
            return (Criteria) this;
        }

        public Criteria andCartquantIsNull() {
            addCriterion("cartQuant is null");
            return (Criteria) this;
        }

        public Criteria andCartquantIsNotNull() {
            addCriterion("cartQuant is not null");
            return (Criteria) this;
        }

        public Criteria andCartquantEqualTo(Integer value) {
            addCriterion("cartQuant =", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantNotEqualTo(Integer value) {
            addCriterion("cartQuant <>", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantGreaterThan(Integer value) {
            addCriterion("cartQuant >", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantGreaterThanOrEqualTo(Integer value) {
            addCriterion("cartQuant >=", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantLessThan(Integer value) {
            addCriterion("cartQuant <", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantLessThanOrEqualTo(Integer value) {
            addCriterion("cartQuant <=", value, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantIn(List<Integer> values) {
            addCriterion("cartQuant in", values, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantNotIn(List<Integer> values) {
            addCriterion("cartQuant not in", values, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantBetween(Integer value1, Integer value2) {
            addCriterion("cartQuant between", value1, value2, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCartquantNotBetween(Integer value1, Integer value2) {
            addCriterion("cartQuant not between", value1, value2, "cartquant");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceIsNull() {
            addCriterion("cartTotalprice is null");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceIsNotNull() {
            addCriterion("cartTotalprice is not null");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceEqualTo(BigDecimal value) {
            addCriterion("cartTotalprice =", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceNotEqualTo(BigDecimal value) {
            addCriterion("cartTotalprice <>", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceGreaterThan(BigDecimal value) {
            addCriterion("cartTotalprice >", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cartTotalprice >=", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceLessThan(BigDecimal value) {
            addCriterion("cartTotalprice <", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cartTotalprice <=", value, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceIn(List<BigDecimal> values) {
            addCriterion("cartTotalprice in", values, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceNotIn(List<BigDecimal> values) {
            addCriterion("cartTotalprice not in", values, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cartTotalprice between", value1, value2, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andCarttotalpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cartTotalprice not between", value1, value2, "carttotalprice");
            return (Criteria) this;
        }

        public Criteria andProdidIsNull() {
            addCriterion("prodid is null");
            return (Criteria) this;
        }

        public Criteria andProdidIsNotNull() {
            addCriterion("prodid is not null");
            return (Criteria) this;
        }

        public Criteria andProdidEqualTo(Long value) {
            addCriterion("prodid =", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidNotEqualTo(Long value) {
            addCriterion("prodid <>", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidGreaterThan(Long value) {
            addCriterion("prodid >", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidGreaterThanOrEqualTo(Long value) {
            addCriterion("prodid >=", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidLessThan(Long value) {
            addCriterion("prodid <", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidLessThanOrEqualTo(Long value) {
            addCriterion("prodid <=", value, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidIn(List<Long> values) {
            addCriterion("prodid in", values, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidNotIn(List<Long> values) {
            addCriterion("prodid not in", values, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidBetween(Long value1, Long value2) {
            addCriterion("prodid between", value1, value2, "prodid");
            return (Criteria) this;
        }

        public Criteria andProdidNotBetween(Long value1, Long value2) {
            addCriterion("prodid not between", value1, value2, "prodid");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andProdpriceIsNull() {
            addCriterion("prodPrice is null");
            return (Criteria) this;
        }

        public Criteria andProdpriceIsNotNull() {
            addCriterion("prodPrice is not null");
            return (Criteria) this;
        }

        public Criteria andProdpriceEqualTo(BigDecimal value) {
            addCriterion("prodPrice =", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceNotEqualTo(BigDecimal value) {
            addCriterion("prodPrice <>", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceGreaterThan(BigDecimal value) {
            addCriterion("prodPrice >", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("prodPrice >=", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceLessThan(BigDecimal value) {
            addCriterion("prodPrice <", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("prodPrice <=", value, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceIn(List<BigDecimal> values) {
            addCriterion("prodPrice in", values, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceNotIn(List<BigDecimal> values) {
            addCriterion("prodPrice not in", values, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("prodPrice between", value1, value2, "prodprice");
            return (Criteria) this;
        }

        public Criteria andProdpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("prodPrice not between", value1, value2, "prodprice");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppingcart
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 02 22:36:50 NPT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shoppingcart
     *
     * @mbg.generated Tue Jun 02 22:36:50 NPT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}